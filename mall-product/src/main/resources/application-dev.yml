spring:
  application:
    name: product-service
    
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${DB_HOST:localhost}:${DB_PORT:3306}/${DB_NAME:mall}?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=UTC
    username: ${DB_USERNAME:root}
    password: ${DB_PASSWORD:1234}

  cloud:
    nacos:
      server-addr: ${NACOS_SERVER_ADDR:localhost:8848}
      discovery:
        enabled: true
        register-enabled: true
        ip: 127.0.0.1
        prefer-ip-address: true
        namespace: ${NACOS_NAMESPACE:development}
        group: ${NACOS_GROUP:DEFAULT_GROUP}
    openfeign:
      client:
        config:
          default:
            connectTimeout: 5000
            readTimeout: 10000
      circuitbreaker:
        enabled: true
        
  data:
    redis:
      host: ${REDIS_HOST:127.0.0.1}
      port: ${REDIS_PORT:6379}
      database: ${REDIS_DATABASE:1}
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0

  cache:
    type: redis
    redis:
      time-to-live: 1800000  # 30 minutes for dev
      cache-null-values: true
      key-prefix: "dev:product:"
      
  servlet:
    multipart:
      enabled: true
      max-request-size: 10MB
      max-file-size: 10MB

mybatis-plus:
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    map-underscore-to-camel-case: true
  type-aliases-package: com.intelijake.mall.pojo
  mapper-locations: classpath*:mapper/*.xml
  global-config:
    db-config:
      logic-delete-field: is_deleted
      logic-delete-value: 1
      logic-not-delete-value: 0
      id-type: auto

server:
  port: ${SERVER_PORT:8082}
  servlet:
    context-path: /

# Logging configuration for development
logging:
  level:
    com.intelijake.mall.product: ${LOG_LEVEL:DEBUG}
    org.springframework.cloud.openfeign: DEBUG
    com.netflix.hystrix: DEBUG
    org.springframework.web: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level [%logger{50}] - %msg%n"

# Management endpoints for monitoring and health checks
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,circuitbreakers
  endpoint:
    health:
      show-details: always
  health:
    circuitbreakers:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true

# Circuit breaker configuration
resilience4j:
  circuitbreaker:
    instances:
      default:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 5s
        failureRateThreshold: 50
        eventConsumerBufferSize: 10
  retry:
    instances:
      default:
        maxAttempts: 3
        waitDuration: 1s
        enableExponentialBackoff: true
        exponentialBackoffMultiplier: 2

# AWS Configuration (if needed for file uploads)
cloud:
  aws:
    credentials:
      accessKey: ${AWS_ACCESS_KEY_ID}
      secretKey: ${AWS_SECRET_ACCESS_KEY}
    region: ${AWS_REGION:eu-west-1}
    s3:
      bucket: ${AWS_S3_BUCKET:jake-mall-dev-bucket}

spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/mall?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=UTC
    username: root
    password: 1234
    # Connection pool configuration for order service
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
      leak-detection-threshold: 60000

  cloud:
    nacos:
      server-addr: localhost:8848
      discovery:
        enabled: true
        register-enabled: true
        ip: 127.0.0.1
        namespace: public
        group: DEFAULT_GROUP
    openfeign:
      circuitbreaker:
        enabled: true
      client:
        config:
          default:
            connectTimeout: 5000
            readTimeout: 10000
          customer-service:
            connectTimeout: 3000
            readTimeout: 8000
  application:
    name: order-service

  data:
    redis:
      host: 127.0.0.1
      port: 6379
      database: 0

  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: guest
    password: guest
    virtual-host: /

  cache:
    type: redis
    redis:
      time-to-live: 3600000
      cache-null-values: true

# Email Service Configuration
email:
  service:
    url: http://localhost:8084

# Customer Service Configuration
customer:
  service:
    url: http://localhost:8082
  servlet:
    multipart:
      enabled: true
      max-request-size: 10MB
      max-file-size: 10MB

  # Transaction management configuration
  transaction:
    default-timeout: 30
    rollback-on-commit-failure: true
mybatis-plus:
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    map-underscore-to-camel-case: true
    cache-enabled: true
    lazy-loading-enabled: true
    multiple-result-sets-enabled: true
  type-aliases-package: com.intelijake.mall.pojo
  mapper-locations: classpath:mapper/*.xml
  global-config:
    db-config:
      logic-delete-field: is_deleted
      logic-delete-value: 1
      logic-not-delete-value: 0
      id-type: auto
      table-prefix: ""
      # Enable optimistic locking for order updates
      update-strategy: not_null

server:
  port: 8085

# Circuit breaker configuration for order service
resilience4j:
  circuitbreaker:
    instances:
      default:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 5s
        failureRateThreshold: 50
        eventConsumerBufferSize: 10
      customer-service:
        registerHealthIndicator: true
        slidingWindowSize: 20
        minimumNumberOfCalls: 10
        permittedNumberOfCallsInHalfOpenState: 5
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 10s
        failureRateThreshold: 60
        eventConsumerBufferSize: 10
  retry:
    instances:
      default:
        maxAttempts: 3
        waitDuration: 1s
        enableExponentialBackoff: true
        exponentialBackoffMultiplier: 2
      customer-service:
        maxAttempts: 2
        waitDuration: 500ms
        enableExponentialBackoff: true
        exponentialBackoffMultiplier: 1.5
  timelimiter:
    instances:
      default:
        timeoutDuration: 10s
      customer-service:
        timeoutDuration: 5s

# Management endpoints for monitoring and health checks
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,circuitbreakers,rabbitmq
  endpoint:
    health:
      show-details: always
  health:
    circuitbreakers:
      enabled: true
    rabbit:
      enabled: true
  prometheus:
    metrics:
      export:
        enabled: true

# Logging configuration for debugging and monitoring
logging:
  level:
    com.intelijake.mall.order: DEBUG
    org.springframework.cloud.openfeign: DEBUG
    org.springframework.amqp: INFO
    com.intelijake.mall.order.listener: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level [%logger{50}] - %msg%n"

cloud:
  aws:
    credentials:
      accessKey: ${AWS_ACCESS_KEY_ID}
      secretKey: ${AWS_SECRET_ACCESS_KEY}
    region: ${AWS_REGION:eu-west-1}
    s3:
      bucket: ${AWS_S3_BUCKET:jake-mall-bucket}



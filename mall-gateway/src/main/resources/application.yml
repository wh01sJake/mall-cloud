server:
  port: 9000 # 前端默认访问端口号为9000
  servlet:
    context-path: / # 前端默认访问的根路径
spring:
  application:
    name: gateway-service  # 程序名就是服务名
  cloud:
    nacos:
      server-addr: 127.0.0.1:8848
    gateway: # predicates 断言  Path：路径断言
      httpclient:
        connect-timeout: 10000
        response-timeout: 60s
      routes:
        # API routes with /api prefix (for frontend)
        - id: api-admin-service
          uri: lb://admin-service
          predicates:
            - Path=/api/admin/**
          filters:
            - RewritePath=/api/admin/(?<segment>.*), /admin/$\{segment}
            - JwtAuthentication
        # Public product endpoints (no authentication required)
        - id: api-product-public-categories
          uri: lb://product-service
          predicates:
            - Path=/api/product/category/**
          filters:
            - RewritePath=/api/product/(?<segment>.*), /product/$\{segment}
        - id: api-product-public-customer
          uri: lb://product-service
          predicates:
            - Path=/api/product/customer/**
          filters:
            - RewritePath=/api/product/(?<segment>.*), /product/$\{segment}
        - id: api-product-public-select
          uri: lb://product-service
          predicates:
            - Path=/api/product/selectById/**
          filters:
            - RewritePath=/api/product/(?<segment>.*), /product/$\{segment}
        - id: api-product-public-select-category
          uri: lb://product-service
          predicates:
            - Path=/api/product/selectByCategoryId/**
          filters:
            - RewritePath=/api/product/(?<segment>.*), /product/$\{segment}
        # Protected product endpoints (authentication required)
        - id: api-product-service
          uri: lb://product-service
          predicates:
            - Path=/api/product/**
          filters:
            - RewritePath=/api/product/(?<segment>.*), /product/$\{segment}
            - JwtAuthentication
        - id: api-upload-service-generic
          uri: lb://product-service
          predicates:
            - Path=/api/upload
          filters:
            - RewritePath=/api/upload, /upload
            - JwtAuthentication
        - id: api-upload-service
          uri: lb://product-service
          predicates:
            - Path=/api/upload/**
          filters:
            - RewritePath=/api/upload/(?<segment>.*), /upload/$\{segment}
            - JwtAuthentication
        # Public customer endpoints (no authentication required)
        - id: api-customer-public-auth
          uri: lb://customer-service
          predicates:
            - Path=/api/customer/login, /api/customer/register
          filters:
            - RewritePath=/api/customer/(?<segment>.*), /customer/$\{segment}
        # Protected customer endpoints (authentication required)
        - id: api-customer-service
          uri: lb://customer-service
          predicates:
            - Path=/api/customer/**
          filters:
            - RewritePath=/api/customer/(?<segment>.*), /customer/$\{segment}
            - JwtAuthentication
        - id: api-order-service
          uri: lb://order-service
          predicates:
            - Path=/api/order/**
          filters:
            - RewritePath=/api/order/(?<segment>.*), /order/$\{segment}
            - JwtAuthentication
        - id: api-statistics-service
          uri: lb://statistics-service
          predicates:
            - Path=/api/statistics/**
          filters:
            - RewritePath=/api/statistics/(?<segment>.*), /statistics/$\{segment}
            - JwtAuthentication
        - id: api-email-service
          uri: lb://email-service
          predicates:
            - Path=/api/email/**
          filters:
            - RewritePath=/api/email/(?<segment>.*), /email/$\{segment}
            - JwtAuthentication
        # Direct routes without /api prefix (for backward compatibility)
        - id: admin-service
          uri: lb://admin-service
          predicates:
            - Path=/admin/**
          filters:
            - JwtAuthentication
        - id: product-service
          uri: lb://product-service
          predicates:
            - Path=/product/**
          filters:
            - JwtAuthentication
        - id: customer-service
          uri: lb://customer-service
          predicates:
            - Path=/customer/**
          filters:
            - JwtAuthentication
        - id: order-service
          uri: lb://order-service
          predicates:
            - Path=/order/**
          filters:
            - JwtAuthentication
        - id: statistics-service  # Statistics service route
          uri: lb://statistics-service
          predicates:
            - Path=/statistics/**
          filters:
            - JwtAuthentication
        - id: email-service  # Email service route
          uri: lb://email-service
          predicates:
            - Path=/email/**
          filters:
            - JwtAuthentication
  data:
    redis:
      host: 127.0.0.1
      port: 6379
      database: 0

# AWS Configuration (if needed for file uploads)
cloud:
  aws:
    credentials:
      accessKey: ${AWS_ACCESS_KEY_ID}
      secretKey: ${AWS_SECRET_ACCESS_KEY}
    region: ${AWS_REGION:eu-west-1}
    s3:
      bucket: ${AWS_S3_BUCKET:jake-mall-bucket}